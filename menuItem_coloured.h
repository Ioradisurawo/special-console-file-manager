#pragma once

#include <string>
#include <functional>
#include <windows.h>

enum Color
{
	BLACK = 0,
	fgDARK_BLUE = FOREGROUND_BLUE,
	fgDARK_GREEN = FOREGROUND_GREEN,
	fgDARK_CYAN = FOREGROUND_GREEN | FOREGROUND_BLUE,
	fgDARK_RED = FOREGROUND_RED,
	fgDARK_MAGENTA = FOREGROUND_RED | FOREGROUND_BLUE,
	fgDARK_YELLOW = FOREGROUND_RED | FOREGROUND_GREEN,
	fgDARK_GRAY = FOREGROUND_RED | FOREGROUND_GREEN | FOREGROUND_BLUE,
	fgGRAY = FOREGROUND_INTENSITY,
	fgBLUE = FOREGROUND_INTENSITY | FOREGROUND_BLUE,
	fgGREEN = FOREGROUND_INTENSITY | FOREGROUND_GREEN,
	fgCYAN = FOREGROUND_INTENSITY | FOREGROUND_GREEN | FOREGROUND_BLUE,
	fgRED = FOREGROUND_INTENSITY | FOREGROUND_RED,
	fgMAGENTA = FOREGROUND_INTENSITY | FOREGROUND_RED | FOREGROUND_BLUE,
	fgYELLOW = FOREGROUND_INTENSITY | FOREGROUND_RED | FOREGROUND_GREEN,
	fgWHITE = FOREGROUND_INTENSITY | FOREGROUND_RED | FOREGROUND_GREEN | FOREGROUND_BLUE,
	bgDARK_BLUE = BACKGROUND_BLUE,
	bgDARK_GREEN = BACKGROUND_GREEN,
	bgDARK_CYAN = BACKGROUND_GREEN | BACKGROUND_BLUE,
	bgDARK_RED = BACKGROUND_RED,
	bgDARK_MAGENTA = BACKGROUND_RED | BACKGROUND_BLUE,
	bgDARK_YELLOW = BACKGROUND_RED | BACKGROUND_GREEN,
	bgDARK_GRAY = BACKGROUND_RED | BACKGROUND_GREEN | BACKGROUND_BLUE,
	bgGRAY = BACKGROUND_INTENSITY,
	bgBLUE = BACKGROUND_INTENSITY | BACKGROUND_BLUE,
	bgGREEN = BACKGROUND_INTENSITY | BACKGROUND_GREEN,
	bgCYAN = BACKGROUND_INTENSITY | BACKGROUND_GREEN | BACKGROUND_BLUE,
	bgRED = BACKGROUND_INTENSITY | BACKGROUND_RED,
	bgMAGENTA = BACKGROUND_INTENSITY | BACKGROUND_RED | BACKGROUND_BLUE,
	bgYELLOW = BACKGROUND_INTENSITY | BACKGROUND_RED | BACKGROUND_GREEN,
	bgWHITE = BACKGROUND_INTENSITY | BACKGROUND_RED | BACKGROUND_GREEN | BACKGROUND_BLUE,
};

class MenuItem
{
	std::string text;
	std::function<void()> func;
	WORD color;
public:
	// Конструктор 
	MenuItem(const std::string& text, const WORD& color);

	// Конструктор 
	MenuItem(const std::string& text, const WORD& color, std::function<void()> function);

	// Color
	const WORD& GetColor();
	void SetColor(const WORD& color);

	// Text
	const std::string& GetText();
	void				SetText(std::string text);

	// func
	void	SetFunc(std::function<void()> function);
	void	InvokeFunction();
};